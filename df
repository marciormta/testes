Desculpe, eu assumi que vocÃª tinha o vetor probabilidade no seu cÃ³digo, mas se vocÃª nÃ£o tem, vocÃª pode calcular ele usando o seu modelo de regressÃ£o logÃ­stica. Para isso, vocÃª pode usar o mÃ©todo predict_proba do seu modelo, que retorna a probabilidade de cada classe para cada observaÃ§Ã£o. Por exemplo, se vocÃª quiser calcular a probabilidade de conversÃ£o de acordo para o conjunto de teste, vocÃª pode fazer:

# Calculando a probabilidade de conversÃ£o de acordo para o conjunto de teste
prob_test = model.predict_proba(X_test)

# Criando uma coluna com a probabilidade da classe "ConcluÃ­do"
df_test["probabilidade"] = prob_test[:, 0]

# Visualizando as primeiras linhas do conjunto de teste com a nova coluna
df_test.head()

Para adicionar rÃ³tulos de dados em cada um dos grÃ¡ficos, vocÃª pode usar o mÃ©todo annotate do matplotlib.pyplot. Esse mÃ©todo permite que vocÃª adicione texto em uma posiÃ§Ã£o especÃ­fica do grÃ¡fico. VocÃª pode especificar o texto, as coordenadas x e y, o alinhamento horizontal e vertical, a cor e o tamanho da fonte. Por exemplo, se vocÃª quiser adicionar rÃ³tulos de dados no grÃ¡fico de barras, vocÃª pode fazer:

# Criando um grÃ¡fico de barras para mostrar a quantidade de acordos por tipo de acionamento
ax = sns.countplot(x="tipo_acionamento", hue="status_do_acordo", data=df)
plt.title("Quantidade de acordos por tipo de acionamento")
plt.xlabel("Tipo de acionamento")
plt.ylabel("Quantidade de acordos")
plt.legend(title="Status do acordo")

# Adicionando rÃ³tulos de dados em cada barra
for p in ax.patches:
    x = p.get_x() + p.get_width() / 2 # coordenada x do centro da barra
    y = p.get_y() + p.get_height() # coordenada y do topo da barra
    value = int(p.get_height()) # valor da altura da barra
    ax.annotate(value, (x, y), ha="center", va="bottom", color="black", fontsize=12) # adicionando o texto

plt.show()

Esse Ã© um exemplo de como adicionar rÃ³tulos de dados em um grÃ¡fico de barras, mas vocÃª pode fazer o mesmo para outros tipos de grÃ¡ficos. Se quiser saber mais sobre como usar o mÃ©todo annotate, vocÃª pode consultar a documentaÃ§Ã£o do matplotlib.pyplot.ğŸ‘‡

: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.annotate.html
